// Generated by Melange
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Utils = require("./Utils.js");
var React = require("react");
var StoryData = require("./StoryData.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var StoryListItem = require("./StoryListItem.js");

var initialState_topstories = [];

var initialState = {
  topstories: initialState_topstories,
  page: 0,
  loading: false
};

function TopStoriesPage(Props) {
  var match = React.useReducer((function (state, action) {
          if (!action) {
            return {
                    topstories: state.topstories,
                    page: state.page,
                    loading: true
                  };
          }
          var match = action._0;
          var updatedTopstories = Belt_Array.concat(state.topstories, match[1]);
          return {
                  topstories: updatedTopstories,
                  page: match[0] + 1 | 0,
                  loading: false
                };
        }), initialState);
  var dispatch = match[1];
  var state = match[0];
  React.useEffect((function () {
          StoryData.fetchTopStories(state.page, (function (payload) {
                  return Curry._1(dispatch, /* Loaded */{
                              _0: payload
                            });
                }));
          
        }), []);
  React.useEffect(function () {
        var scrollHander = function (_e) {
          if (Utils.distanceFromBottom(undefined) < 100 && !state.loading) {
            if (state.page < 4) {
              StoryData.fetchTopStories(state.page, (function (payload) {
                      return Curry._1(dispatch, /* Loaded */{
                                  _0: payload
                                });
                    }));
              return Curry._1(dispatch, /* Loading */0);
            } else {
              return ;
            }
          }
          
        };
        window.addEventListener("scroll", scrollHander);
        return (function (param) {
                  window.removeEventListener("scroll", scrollHander);
                  
                });
      });
  return React.createElement("div", undefined, state.topstories.length !== 0 ? Belt_Array.mapWithIndex(state.topstories, (function (index, story) {
                      return React.createElement(StoryListItem.make, {
                                  story: story,
                                  index: index,
                                  key: String(story.id + index | 0)
                                });
                    })) : null);
}

var make = TopStoriesPage;

exports.initialState = initialState;
exports.make = make;
/* react Not a pure module */
